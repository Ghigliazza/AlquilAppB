<% @driver = params[:driver] %>

<%= form_with(model: rental) do |form| %>
  <% if rental.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(rental.errors.count, "error") %> prohibited this rental from being saved:</h2>
      
      <ul>
        <% rental.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <label for="hsRange" class="form-label">Indique la cantidad de horas: </label> 
    <input type="range" id="hsRange" value="1" min=1 max=24 step="1" oninput="this.nextElementSibling.value = this.value" onchange="calcule_rent()">
    <output> 1 </output>
  </div>

  <div>
    <%= form.label :price, style: "display: block" %>
    <%= form.hidden_field :price, :id => "in_price", :value => Rental.states["#{@rental.state}"] %>

    <%# VALORES INICIALES DE PRECIO %>
    <output id="out_price">
      <% if @rental.price == nil %>
        <%= Rental.states["#{@rental.state}"] %>
          
      <% else %>
        <script> print $('#hsRange').val()*60*60 + <%= @rental.price + Rental.states[:extended] %> </script>
      <% end %>
    </output>
  </div>

  <div>
    Saldo: <%= current_user.balance %>
  </div>

  <div>
    <%= form.label :expires, style: "display: block" %>
    <%= form.hidden_field :expires, :id => "in_expire", :value => Time.now + 1.hour %>

    <%# VALORES INICIALES DE FECHA %>
    <output id="out_expired">
      <% if @rental.expires == nil %>
        <%= (Time.now + 1.hour).strftime('%Y-%m-%e %k:%M:%S') %>
        
      <% else %>
        <script> print $('#hsRange').val()*60*60 + date_format(new Date(<%= (@rental.expires.getHours() + Time.now.getHours()).round %>)) </script>
      <% end %>
    </output>
  </div>

  <div>
    <%= form.hidden_field :user_id, :value => current_user.id %>
  </div>

  <div>
    <%= form.hidden_field :car_id, :value => params[:car_id]%>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>



<%# ================================================================================================== %>
<script>
  function calcule_rent() {
    const in_price = $('#in_price')
    const out_price = $('#out_price')
    const in_expire = $('#in_expire')
    const out_expired = $('#out_expired')
    const hs = $('#hsRange').val()


    if (<%= @rental.price == nil %>) {
      in_price.val(hs * <%= Rental.states[:started] %>)
      date = new Date().getTime() + hs*60*60*1000 //1hs->60m, 1m->60s, 1s->1000ms
      
    } else {
      in_price.val(<%= @rental.price %> + hs*<%= Rental.states[:extended] %>)
      date = <%= @rental.expires.to_i/1.hour %> + (new Date().getTime()) + hs*60*60*1000
    }
    out_price.val(in_price.val())

    
    date = new Date(date)

    in_expire.val(date_format(date))
    out_expired.val(in_expire.val())
  }

  function date_format(date) {
    return `${date.getFullYear()}-${date.getMonth()+1}-${[date.getDate()]} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`
  }

</script>
